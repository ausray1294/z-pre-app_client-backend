servives:
  postgresdb:
    image: postgres:alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=docker
      - POSTGRES_DB=inventory_db
      - POSTGRES_PORT=5432
    ports:
      - '5432:5432'
    volumes: postgres_data:/var/lib/postgresql/postgres_data
    networks:
      - inventory_network

  server:
    build: ./backend
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - '8080:8080'

    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=docker
      - POSTGRES_DB=inventory_db
      - POSTGRES_PORT=5432
      - POSTGRES_HOST=postgresdb
      - NODE_ENV=development
    volumes:
      - type: bind
        source: ./backend
        target: /app/source
    command: npm run start
    networks:
      - inventory_network
  client:
    build: ./client
    depends_on:
      - server
    ports:
      - '3000:3000'
    volumes:
      - type: bind
      - source: ./client
      - target: ./client
    networks:
      - inventory_network

networks:
  inventory_network:
    driver: bridge
